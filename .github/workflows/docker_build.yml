name: Build and Push Docker Image

on:
  push:
    branches:
      - dev
      - master
    paths:
      - "api/**"
      - "frontend/**"
jobs:
  create-container:
    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_DEBUG: false
          envkey_DEMO_SECRET: ${{ secrets.DEMO_SECRET }}
          envkey_SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          envkey_PROD_INSTANCE: "https://graphit.ur.de"
          envkey_PROD_SPARQL_ENDPOINT: "https://query.graphit.ur.de/proxy/wdqs/bigdata/namespace/wdq/sparql"
          file_name: .env

      - name: Build Docker image
        run: ./build.sh "${{ github.run_number }}-${{ steps.extract_branch.outputs.branch }}" .env

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker image to GitHub Container Registry
        run: docker push "ghcr.io/pda-ur/graphit-app:${{ github.run_number }}-${{ steps.extract_branch.outputs.branch }}"

  notify-server:
    runs-on: ubuntu-latest
    needs: create-container
    if: needs.create-container.result == 'success'
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Trigger Webhook
        run: |
          PAYLOAD=$(echo -n '{"ref": "refs/heads/${{ steps.extract_branch.outputs.branch }}", "event_name": "push", "branch": "${{ steps.extract_branch.outputs.branch }}", "image": "ghcr.io/pda-ur/graphit-app:${{ github.run_number }}-${{ steps.extract_branch.outputs.branch }}" }')
          curl -X POST \
              -H "Content-Type: application/json" \
              -H "X-Hub-Signature: sha1=$(echo -n $PAYLOAD | openssl dgst -sha1 -hmac ${{ secrets.WEBHOOK_SECRET }} | awk '{print $2}')" \
              -d "$PAYLOAD" \
              ${{ secrets.WEBHOOK_URL }}
        env:
          PAYLOAD: '{"ref": "refs/heads/${{ steps.extract_branch.outputs.branch }}", "event_name": "push", "branch": "${{ steps.extract_branch.outputs.branch }}", image: "ghcr.io/pda-ur/graphit-app:${{ github.run_number }}-${{ steps.extract_branch.outputs.branch }}" }'

  send-status:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs:
      - create-container
      - notify-server
    if: ${{ always() }}

    steps:
      - name: Notify
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          username: "GitHub Actions"
          avatar-url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
